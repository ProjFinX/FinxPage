{"version":3,"file":"static/js/280.9d729835.chunk.js","mappings":"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","sources":["components/menumngr/mngmenu.js","components/menumngr/treenodesource.js","components/utilities/getbranchlist.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport { useState, useEffect } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport Alerts from \"../htmlcomponents/Alerts\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport api from \"../api/Webcall\";\nimport Spinner from \"../htmlcomponents/Spinner\";\n\nimport {\n  generateUUID,\n  compressBase64,\n  decompressBase64,\n} from \"../utilities/utils\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { GetMenuItems, GetMenuRole } from \"../utilities/getmenulist\";\nimport { GetBranchList } from \"../utilities/getbranchlist\";\nimport {\n  MenuItemsNodeSource,\n  UserBranchRoleMapNodeSource,\n} from \"./treenodesource\";\n\nimport appsettings from \"../../appsettings.json\";\n\nconst apiendpoints = appsettings.ApiEndpoints;\n\n//Ref\n//https://react-bootstrap.github.io/components/modal//\n\nlet count = 0;\n\nconst getNodeIds = (nodes) => {\n  let ids = [];\n\n  nodes?.forEach(({ value, children }) => {\n    ids = [...ids, value, ...getNodeIds(children)];\n  });\n\n  return ids;\n};\n\nconst schema = yup.object().shape({\n // txtMenuId: yup.string().required(\"Pls select the menu\"),\n});\n\nlet menunode = [];\nlet rolenode = [];\n\nfunction MngMenuRole() {\n  var menudetails;\n  let menures;\n\n  let sourcearr = [];\n  let nodecheck = [];\n\n  count++;\n  console.log(count);\n\n  const [isLoading, setLoanding] = useState(false);\n\n  // GetMenuItems\n\n  const [menuitemresbody, setmenuitemresbody] = useState([]);\n  const [IsGroupMenu, SetIsGroupMenu] = useState(false);\n  const FetchMenuItems = async () => {\n    const MenuItemsResponse = await GetMenuItems();\n    setmenuitemresbody(MenuItemsResponse.body.mnugrpitm);\n\n    console.log(MenuItemsResponse.body.mnugrpitm);\n  };\n\n  // Get Branch List\n\n  const [branchresbody, setbranchlistresbody] = useState([]);\n  const FetchBranchList = async () => {\n    const BranchListResponse = await GetBranchList();\n\n    console.log(BranchListResponse.body);\n\n    setbranchlistresbody(BranchListResponse.body.Branches);\n  };\n\n  useEffect(() => {\n    FetchMenuItems();\n    FetchBranchList();\n  }, []);\n\n  const [checked, setchecked] = useState([]);\n  const [expanded, setExpand] = useState([]);\n  const [roleexpanded, setRoleExpand] = useState([]);\n  const [rolechecked, setRolechecked] = useState([]);\n  const [MnuItmId, setMnuItmId] = useState(0);\n  const [ClickedValue, SetClickedValue] = useState(\"\");\n\n  if (menunode.length == 0 || rolenode.length == 0) {\n    menunode = MenuItemsNodeSource(menuitemresbody);\n    rolenode = UserBranchRoleMapNodeSource(branchresbody);\n    console.log(menunode);\n  }\n\n  const [smenunode, setsmenunode] = useState(menunode);\n\n  // Add Role Popup\n  useEffect(() => {\n    setRoleExpand(getNodeIds(rolenode));\n  }, [rolechecked]);\n\n\n\n\n//==============================================================\n  //  Tree Node click function\n\n  const onClick = async (clicked) => {\n    let mnugroupid = \"\";\n    let nodearr = [];\n    let mnuitemid = \"\";\n\n    console.log(\"clicked.value\", clicked.value);\n    SetClickedValue(clicked.value);\n\n    if (clicked.treeDepth == 0) {      \n      let node = clicked.value;\n      nodearr = node.split(\"-\");\n      if (nodearr.length > 1) {\n        mnugroupid = nodearr[1];\n      }\n\n      SetIsGroupMenu(true);\n      setMnuItmId(mnugroupid);\n    }\n     else {\n      let node = clicked.value;\n      nodearr = node.split(\"-\");\n\n      if (nodearr.length > 2) {\n        mnugroupid = nodearr[1];\n        mnuitemid = nodearr[0];\n      }\n      setMnuItmId(mnuitemid);\n    }\n\n\n//======================================================================\n\n    const mnuroleres = await GetMenuRole(mnugroupid, mnuitemid);\n\n    //setRolechecked(menudetails.label.BRMapIds);\n    //setRoleExpand(menudetails.label.BRMapIds);\n\n    if (clicked.treeDepth == 0) {\n      SetIsGroupMenu(true);\n      reset({\n        txtMenuId: mnugroupid,\n        txtMenuname: clicked.label,\n      });\n      let brmapids = [];\n      let BRMapIdsstr = mnuroleres.body.MnuGroup.BRMapIds;\n      BRMapIdsstr = BRMapIdsstr.replace(\"[\", \"\").replace(\"]\", \"\"); // role mapi provide [ ' ] bracktes, this need to be removed\n      let brmapidsarray = BRMapIdsstr.split(\",\");\n      console.log(\"brmapidsarray\", brmapidsarray);\n      setRolechecked(brmapidsarray);\n    } else {\n      SetIsGroupMenu(false);\n      reset({\n        txtMenuId: mnuitemid,\n        txtMenuname: clicked.label,\n      });\n\n      console.log(\"brmapidsarray\", mnuroleres.body.MnuItem.BRMapIds);\n      setRolechecked(mnuroleres.body.MnuItem.BRMapIds);\n    }\n  };\n\n  //---------------------------------------------\n\n  const [menus, setmenus] = useState({\n    txtMenuId: \"\",\n    txtMenuname: \"\",\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: menus,\n  });\n\n  const [alert, setAlert] = useState(\"\");\n\n  const [gridshow, setgridShow] = useState(false);\n\n  const gridhandleClose = () => setgridShow(false);\n  const gridhandleShow = () => setgridShow(true);\n\n\n\n\n  const onGridModalSubmitHandler = async (data, e) => {\n    try {\n      e.preventDefault(); \n\n      let frmData = {};\n\n      let createmenuurl = apiendpoints.ManageMenuItem;\n\n        frmData = { txtMnuGrpId: data.txtModalMnuGroupId, txtMnuItmId:data.txtModalMnuId ,txtMnuItmName:data.txtModalMnuItmName, \n                txtParentId:data.txtModalMnuParentId,ntxtOrd:data.txtModalMnuOrd,txtLink:data.txtModalLink};\n      \n      \n      \n\n      console.log(frmData);\n\n      setLoanding(true);\n\n      //e.preventDefault();\n      /* Header */\n      const convID = generateUUID();\n      const frmHdr = {\n        convid: convID,\n        tag: \"rolusrmap\",\n        orgid: \"\",\n        vendid: \"0\",\n      };\n\n      const reqdata = { hdr: frmHdr, body: frmData };\n      const token = localStorage.getItem(\"token\");\n      const reqHdr = { headers: { Authorization: `Bearer ${token}` } };\n      const CoreUrl = process.env.REACT_APP_FinXCoreUrl;\n\n      console.log(reqHdr);\n      try {\n        //\n        const response = await api.post(\n          createmenuurl,\n          compressBase64(reqdata),\n          reqHdr\n        );\n\n        const strResponse = JSON.parse(decompressBase64(response.data));\n\n        console.log(strResponse);\n\n        if (strResponse.hdr.rst == \"FAILED\" || strResponse.hdr.rst == \"ERROR\") {\n          ShowAlert(\"Error\", JSON.stringify(strResponse.fdr));\n          setLoanding(false);\n        } else {\n          setTimeout(() => {\n            console.log(strResponse.fdr);\n            ShowAlert(\"Success\", JSON.stringify(strResponse.fdr[0].rstmsg));\n            setTimeout(() => {\n              setAlert({\n                AlertType: \"null\",\n                message: \"null\",\n              });\n            }, 600);\n           \n            setLoanding(false);\n          }, 300);\n        }\n      } catch (err) {\n        console.log(err.message);\n        ShowAlert(\"Error\", \"Unable to process request\");\n        setLoanding(false);\n      }\n    } catch (error) {\n      ShowAlert(\"Error\", error.message);\n      setLoanding(false);\n    }\n\n    setgridShow(false);\n  };\n  //Update Role change for the selected menu\n\n\n\n\n//==============================================================================\n\n  const handlepopup = async (e) => {\n    let stagearr = [];\n  \n\n    let node = ClickedValue;\n    let nodearr = node.split(\"-\");\n\n   \n    if (e==\"EDIT\")\n    {\n      if (IsGroupMenu)\n      {\n       \n        reset({    \n          txtModalMnuId:nodearr[0],         \n          txtModalMnuGroupId: nodearr[1],         \n          txtModalMnuItmName:nodearr[2],\n          txtModalMnuOrd: nodearr[3]})\n          \n         if (nodearr.length > 4)\n         {\n          reset({\n            txtModalMnuId:nodearr[0],         \n            txtModalMnuGroupId: nodearr[1],         \n            txtModalMnuItmName:nodearr[2],\n            txtModalMnuOrd: nodearr[3],\n            txtModalLink:(nodearr[4]=='undefined'?'':nodearr[4])\n          \n          });\n         }\n              \n         console.log(IsGroupMenu);\n      }\n      else\n      {\n\n        reset({    \n          txtModalMnuId:nodearr[0],         \n          txtModalMnuGroupId: nodearr[1],    \n          txtModalMnuItmName:nodearr[2],\n          txtModalMnuOrd: nodearr[3]\n        \n        });\n\n        if (nodearr.length > 4)\n          {\n           reset({\n            txtModalMnuId:nodearr[0],         \n            txtModalMnuGroupId: nodearr[1],    \n            txtModalMnuItmName:nodearr[2],\n            txtModalMnuOrd: nodearr[3],\n            txtModalMnuParentId:(nodearr[4]=='undefined'?'':nodearr[4])});\n          }\n\n        if (nodearr.length > 5)\n            {\n             reset({\n              txtModalMnuId:nodearr[0],         \n              txtModalMnuGroupId: nodearr[1],    \n              txtModalMnuItmName:nodearr[2],\n              txtModalMnuOrd: nodearr[3],\n              txtModalMnuParentId: (nodearr[4]=='undefined'?'':nodearr[4]),\n              txtModalLink: (nodearr[5]=='undefined'?'':nodearr[5])});\n          }\n      }\n    }\n\n\n    if (e==\"ADD\")\n      {\n        if (IsGroupMenu)\n        {\n          reset({    \n               \n            txtModalMnuGroupId: nodearr[1]}         \n           )           \n           \n         \n        }\n        else\n        {\n  \n          reset({               \n            txtModalMnuGroupId: nodearr[1],           \n            txtModalMnuParentId: MnuItmId\n          \n          });\n  \n        \n        }\n      }\n\n\n    gridhandleShow();\n  };\n\n \n\n  //==================================================================================================\n\n  const onSubmitHandler = async (data, e) => {\n    try {\n      e.preventDefault();\n      console.log(data);\n      console.log(\"Enter Save role \");\n\n      let frmData = {};\n\n      let createmenuurl = apiendpoints.RoleUserMap;\n\n      if (IsGroupMenu) {\n        //manage menu group rights\n        frmData = { txtMnuGrpId: data.txtMenuId, txtBRMapIds: rolechecked };\n\n        createmenuurl = apiendpoints.ManageMenuGroupRights;\n      } // manage menu item rights\n      else {\n        frmData = { txtMnuItmId: data.txtMenuId, txtBRMapIds: rolechecked };\n        createmenuurl = apiendpoints.ManageMenuItemRights;\n      }\n\n      console.log(frmData);\n\n      setLoanding(true);\n\n      //e.preventDefault();\n      /* Header */\n      const convID = generateUUID();\n      const frmHdr = {\n        convid: convID,\n        tag: \"rolusrmap\",\n        orgid: \"\",\n        vendid: \"0\",\n      };\n\n      const reqdata = { hdr: frmHdr, body: frmData };\n      const token = localStorage.getItem(\"token\");\n      const reqHdr = { headers: { Authorization: `Bearer ${token}` } };\n      const CoreUrl = process.env.REACT_APP_FinXCoreUrl;\n\n      console.log(reqHdr);\n      try {\n        //\n        const response = await api.post(\n          createmenuurl,\n          compressBase64(reqdata),\n          reqHdr\n        );\n\n        const strResponse = JSON.parse(decompressBase64(response.data));\n\n        console.log(strResponse);\n\n        if (strResponse.hdr.rst == \"FAILED\" || strResponse.hdr.rst == \"ERROR\") {\n          ShowAlert(\"Error\", JSON.stringify(strResponse.fdr));\n          setLoanding(false);\n        } else {\n          setTimeout(() => {\n            console.log(strResponse.fdr);\n            ShowAlert(\"Success\", JSON.stringify(strResponse.fdr[0].rstmsg));\n            setTimeout(() => {\n              setAlert({\n                AlertType: \"null\",\n                message: \"null\",\n              });\n            }, 600);\n\n            setRolechecked([]);\n            setRoleExpand([]);\n            reset({\n              txtMenuId: \"\",\n              txtMenuname: \"\",\n            });\n\n            setLoanding(false);\n          }, 300);\n        }\n      } catch (err) {\n        console.log(err.message);\n        ShowAlert(\"Error\", \"Unable to process request\");\n        setLoanding(false);\n      }\n    } catch (error) {\n      ShowAlert(\"Error\", error.message);\n      setLoanding(false);\n    }\n  };\n\n  const ShowAlert = (alertType, message) => {\n    setAlert({\n      AlertType: alertType,\n      message: message,\n    });\n  };\n\n  try {\n    return (\n      <>\n        <section className=\"vh-100\">\n          <div className=\"container h-100\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n              <div className=\"col-lg-12 col-xl-11\">\n                <div\n                  className=\"card text-black\"\n                  style={{ borderRadius: \"25px\" }}\n                >\n                  <div className=\"card-body p-md-5\">\n                    <div></div>\n                    <div className=\"row justify-content-center\">\n                      <div className=\"row\">\n                        <div className=\"col-sm\">\n                          <div className=\"mb-3\">\n                            <p className=\"text-left h4 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                              Menu\n                            </p>\n\n                            <i\n                              className=\"bx bxs-plus-circle\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => {\n                                setExpand(getNodeIds(menunode));\n                              }}\n                            ></i>\n                            <i\n                              className=\"bx bxs-minus-circle\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => {\n                                setExpand([]);\n                              }}\n                            ></i>\n\n                            <CheckboxTree\n                              checked={checked}\n                              expanded={expanded}\n                              nodes={menunode}\n                              onCheck={(checked) => setchecked(checked)}\n                              onExpand={(expanded) => setExpand(expanded)}\n                              onClick={(nodes) => onClick(nodes)}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-sm\">\n                          <div className=\"mb-3\">\n                            <p className=\"text-center h4 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                              Role\n                            </p>\n                            <div>{isLoading ? <Spinner></Spinner> : \"\"}</div>\n                            <Alerts alert={alert} />\n                            <form\n                              onSubmit={handleSubmit(onSubmitHandler)}\n                              autocomplete=\"off\"\n                            >\n                              <div className=\"row\">\n                                <div className=\"col-sm\">\n                                  <div className=\"mb-3\">\n                                    <input\n                                      {...register(\"txtMenuId\")}\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      id=\"txtMenuId\"\n                                      disabled\n                                      placeholder=\"Menu Id\"\n                                    />\n                                    <p>{errors.txtMenuId?.message}</p>\n                                  </div>\n                                </div>\n                                <div className=\"col-sm\">\n                                  <div className=\"mb-3\">\n                                    <input\n                                      {...register(\"txtMenuname\")}\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      id=\"txtMenuname\"\n                                      disabled\n                                      placeholder=\" Name\"\n                                    />\n\n                                  <button  className=\"btn btn-success\" onClick={() => {  \n                                    handlepopup('ADD');                                                 \n                                    }} > <i className=\"bi bi-table\"></i> Add </button>\n\n                                  <button className=\"btn btn-primary\"   onClick={() => {   \n                                               handlepopup('EDIT');                                                   \n                                                }} >  <i className=\"bi bi-pen\"></i> </button>\n                                  \n                                  </div>\n                                </div>\n                              </div>\n\n                              <div className=\"row\">\n                                <div className=\"col-sm\">\n                                  <div className=\"mb-3\">\n                                    <CheckboxTree\n                                      //nodes={nodes}\n                                      nodes={rolenode}\n                                      checked={rolechecked}\n                                      expanded={roleexpanded}\n                                      onCheck={(checked) =>\n                                        setRolechecked(checked)\n                                      }\n                                      onExpand={(expanded) =>\n                                        setRoleExpand(expanded)\n                                      }\n\n                                      // onClick={(nodes) => settreenode(nodes)}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n\n                              <button type=\"submit\" className=\"btn btn-primary\">\n                                Submit\n                              </button>\n                            </form>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <Modal\n          show={gridshow}\n          onHide={gridhandleClose}\n          size=\"xl\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Add Child Menu</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form    onSubmit={handleSubmit(onGridModalSubmitHandler)}\n                              autocomplete=\"off\" >\n              <div className=\"row\">\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalMnuGroupId\" className=\"form-label\">\n                      {\" \"}\n                      Menu Group Id\n                    </label>\n                    <input\n                      {...register(\"txtModalMnuGroupId\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                      disabled=\"disabled\"\n                      readonly=\"readonly\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalMnuParentId\" className=\"form-label\">\n                      {\" \"}\n                      Menu Parent Id\n                    </label>\n                    <input\n                      {...register(\"txtModalMnuParentId\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                      disabled=\"disabled\"\n                      readonly=\"readonly\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalMnuId\" className=\"form-label\">\n                      {\" \"}\n                      Menu Id\n                    </label>\n                    <input\n                      {...register(\"txtModalMnuId\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                      disabled=\"disabled\"\n                      readonly=\"readonly\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalMnuItmName\" className=\"form-label\">\n                      {\" \"}\n                      Menu Name\n                    </label>\n                    <input\n                      {...register(\"txtModalMnuItmName\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                    <p>{errors.txtMnuItmName?.message}</p>\n                  </div>\n                </div>\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalMnuOrd\" className=\"form-label\">\n                      {\" \"}\n                      Order\n                    </label>\n                    <input\n                      {...register(\"txtModalMnuOrd\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-sm\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"txtModalLink\" className=\"form-label\">\n                      {\" \"}\n                      Link\n                    </label>\n                    <input\n                      {...register(\"txtModalLink\")}\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={gridhandleClose}>\n                  Close\n                </Button>\n                <Button type=\"submit\" variant=\"secondary\">\n                  Update\n                </Button>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport default MngMenuRole;\n","\nimport React  from \"react\";\n\n\n\n\n\nexport   function BranchRoleMapNodeSource(arr1,arr2){\n \n  let obj = {};\n  let obj1 = {};\n\n  let parent=[];\n  let child=[];\n  let title = '';\n\n\n  console.log(arr1)\n  console.log(arr2)\n\n\n      arr1.forEach(arr1item => {\n     \n\n\n      arr2.forEach(arr2item => {\n        \n        obj1 = {'value': arr2item.RoleId +'-' + arr1item.BranchId,'label':arr2item.RoleName ,showCheckbox: false,title:title };  \n        child= [...child,obj1]       \n      }  \n      \n      );\n      \n      obj = {'value': arr1item.BranchId,'label':arr1item.Name,showCheckbox: false,title:title,'children':child};\n      \n      parent = [...parent,obj]\n\n\n\n      child= []  \n\n  } )\n\n return parent;\n\n};\n\n\nexport   function MenuItemsNodeSource(sourcearr){\n \n  let gropobj = {};\n  let obj1 = {};\n  let Retobj = {};\n\n  let parent=[];\n  let child=[];\n\n  let Retarr = [];\n  let nvalue = ''\n\n  let title = '';\n      \n      let map = {}, node,node1, res = [], i, obj={},children = [], arr=[];\n\n     \n\n     \n      sourcearr.forEach(arr1item => {\n\n       let arr1=[]\n\n        arr = arr1item.MnuItm;\n\n        if (arr != null)\n        {\n          \n \n          \n\n        console.log('sourcearr',sourcearr)\n\n        for (i = 0; i < arr.length; i += 1) {\n          map[arr[i].MnuItmId] = i;\n         \n           nvalue = arr[i].MnuItmId +'-' + arr[i].MnuGrpId +'-'+ arr[i].MnuItmName  +'-'+ arr[i].Ord +'-'+ arr[i].ParentId  + '-' + arr[i].Link\n           Retobj = { value:nvalue,label:arr[i]} \n           \n           obj={value:nvalue,label:arr[i].MnuItmName , showCheckbox:false}\n           arr1=[...arr1,obj]\n          // arr1[i].children = [];\n           if (arr[i].ParentId ==null)\n           {\n             arr[i].ParentId=0;\n           }\n           \n       };\n       \n\n       for (i = 0; i < arr.length; i += 1) {\n          node = arr[i];\n          node1 = arr1[i];\n          if (node.ParentId !== 0) { \n            \n             if (arr1[map[node.ParentId]].children==null)\n             {\n              arr1[map[node.ParentId]].children = [];\n             }             \n             arr1[map[node.ParentId]].children.push(node1);\n          }\n          else {         \n            child.push(node1);\n          };\n       };\n      }\n      console.log('arr1item',arr1item);\n      nvalue='0-'+ arr1item.MnuGrpId +'-'+ arr1item.MnuGrpName +'-'+ arr1item.Ord +'-'+ arr1item.Link\n      gropobj = {'value': nvalue,'label':arr1item.MnuGrpName,showCheckbox: false,'children':child};\n      Retobj = { value:nvalue,label:arr1item } \n      parent = [...parent,gropobj] \n\n      child= []  \n\n  } )  \n\n  console.log('parent',parent);\n return parent;\n //return [parent,Retarr];\n\n}\n\n\nexport   function UserBranchRoleMapNodeSource(arr1){\n \n    let obj = {};\n    let obj1 = {};\n  \n    let parent=[];\n    let child=[];\n    let arr2 = [];\n  \n        arr1.forEach(arr1item => {\n  \n         arr2 = arr1item.Roles;\n  \n        arr2.forEach(arr2item => {\n          obj1 = {'value': arr2item.BRMapId,'label':arr2item.RName};  \n          child= [...child,obj1]       \n        }  \n        \n        );\n    \n        obj = {'value': arr1item.BranchId +'-B','label':arr1item.Name,showCheckbox: false,'children':child};\n        \n        parent = [...parent,obj]\n  \n        child= []  \n  \n    } )  \n  \n   return parent;\n  \n  }\n  \n\n  export   function StageBranchRoleMapNodeSource(arr1){\n \n    let obj = {};\n    let obj1 = {};\n    let obj3= {};\n  \n    let parent=[];\n    let child=[];\n    let RWchild=[];\n    let arr2 = [];\n  \n        arr1.forEach(arr1item => {\n  \n         arr2 = arr1item.Roles;\n  \n        arr2.forEach(arr2item => {\n\n          let RWchild= [{'value': arr2item.BRMapId + '-R','label':'Read'},{'value': arr2item.BRMapId + '-W','label':'Write'}];\n\n          obj1 = {'value': arr2item.BRMapId,'label':arr2item.RName ,'children':RWchild};  \n          child= [...child,obj1]       \n        }  \n        \n        );\n    \n        obj = {'value': arr1item.BranchId +'-B','label':arr1item.Name,showCheckbox: false,'children':child};\n        \n        parent = [...parent,obj]\n  \n        child= []  \n  \n    } )  \n  \n   return parent;\n  \n  }\n\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { generateUUID, compressBase64,decompressBase64 } from \"./utils\";\r\nimport api from \"../api/Webcall\";\r\nimport appsettings from \"../../appsettings.json\"\r\n\r\n export const GetBranchList = async () => {\r\n\r\n\r\nlet Response;\r\n\r\nconst apiendpoints = appsettings.ApiEndpoints;\r\nconst BranchList = apiendpoints.BranchList;\r\n\r\n const CoreUrl = process.env.REACT_APP_FinXCoreUrl;\r\n//  /* Header */\r\n const convID = generateUUID();\r\n const frmHdr = { convid: convID, tag: \"brchlst\", orgid: \"\", vendid: \"0\" };\r\n const frmData = {}\r\n const data = { hdr: frmHdr, body: frmData };\r\n\r\n const token =    localStorage.getItem('token');\r\n const reqHdr = { headers: { Authorization: `Bearer ${token}` } };  \r\n\r\n const combonurl =  BranchList;\r\n\r\n await api.post(combonurl, compressBase64(data),reqHdr).then(function (response) {\r\n    const strResponse = JSON.parse(decompressBase64(response.data));\r\n    console.log(strResponse);    \r\n       Response = strResponse ;\r\n\r\n  })\r\n\r\n  return  Response;\r\n\r\n};\r\n\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["apiendpoints","appsettings","count","getNodeIds","nodes","ids","forEach","_ref","value","children","schema","yup","shape","menunode","rolenode","console","log","isLoading","setLoanding","useState","menuitemresbody","setmenuitemresbody","IsGroupMenu","SetIsGroupMenu","branchresbody","setbranchlistresbody","useEffect","async","MenuItemsResponse","GetMenuItems","body","mnugrpitm","FetchMenuItems","BranchListResponse","GetBranchList","Branches","FetchBranchList","checked","setchecked","expanded","setExpand","roleexpanded","setRoleExpand","rolechecked","setRolechecked","MnuItmId","setMnuItmId","ClickedValue","SetClickedValue","length","MenuItemsNodeSource","UserBranchRoleMapNodeSource","smenunode","setsmenunode","menus","setmenus","txtMenuId","txtMenuname","register","handleSubmit","formState","errors","reset","useForm","resolver","yupResolver","defaultValues","alert","setAlert","gridshow","setgridShow","gridhandleClose","onGridModalSubmitHandler","data","e","preventDefault","frmData","createmenuurl","ManageMenuItem","txtMnuGrpId","txtModalMnuGroupId","txtMnuItmId","txtModalMnuId","txtMnuItmName","txtModalMnuItmName","txtParentId","txtModalMnuParentId","ntxtOrd","txtModalMnuOrd","txtLink","txtModalLink","convID","generateUUID","reqdata","hdr","convid","tag","orgid","vendid","reqHdr","headers","Authorization","localStorage","getItem","response","api","post","compressBase64","strResponse","JSON","parse","decompressBase64","rst","ShowAlert","stringify","fdr","setTimeout","rstmsg","AlertType","message","err","error","handlepopup","nodearr","split","onSubmitHandler","RoleUserMap","txtBRMapIds","ManageMenuGroupRights","ManageMenuItemRights","alertType","_errors$txtMenuId","_errors$txtMnuItmName","_jsxs","_Fragment","_jsx","className","style","borderRadius","cursor","onClick","CheckboxTree","onCheck","onExpand","mnugroupid","mnuitemid","clicked","treeDepth","mnuroleres","GetMenuRole","label","BRMapIdsstr","MnuGroup","BRMapIds","replace","brmapidsarray","MnuItem","Spinner","Alerts","onSubmit","autocomplete","type","id","disabled","placeholder","Modal","show","onHide","size","centered","Header","closeButton","Title","Body","htmlFor","readonly","Footer","Button","variant","sourcearr","node","node1","i","gropobj","Retobj","parent","child","nvalue","map","obj","arr","arr1item","arr1","MnuItm","MnuGrpId","MnuItmName","Ord","ParentId","Link","showCheckbox","push","MnuGrpName","obj1","arr2","Roles","arr2item","BRMapId","RName","BranchId","Name","StageBranchRoleMapNodeSource","RWchild","Response","BranchList","combonurl","then","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes"],"sourceRoot":""}