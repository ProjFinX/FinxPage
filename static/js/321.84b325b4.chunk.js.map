{"version":3,"file":"static/js/321.84b325b4.chunk.js","mappings":"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","sources":["components/utilities/getScrexpresiontree.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["\r\nimport { generateUUID, compressBase64, decompressBase64 } from \"./utils\";\r\nimport api from \"../api/Webcall\";\r\nimport appsettings from \"../../appsettings.json\"\r\n\r\nconst apiendpoints = appsettings.ApiEndpoints;\r\n\r\nexport const GetExpressiontree = async (ScrId, GroupId) => {\r\n\r\n   let Response;\r\n\r\n   const ExpressionTree = apiendpoints.GetExpTree;\r\n\r\n   //  /* Header */\r\n   const convID = generateUUID();\r\n   const frmHdr = { convid: convID, tag: \"Exp Tree\", orgid: \"\", vendid: \"0\" };\r\n   const frmData = { cmbScrId: ScrId, txtExprGroupId: GroupId }\r\n   const data = { hdr: frmHdr, body: frmData };\r\n   const reqHdr = { };\r\n   const combonurl = ExpressionTree;\r\n\r\n   await api.post(combonurl, compressBase64(data), reqHdr).then(function (response) {\r\n      const strResponse = JSON.parse(decompressBase64(response.data));\r\n      Response = strResponse;\r\n   })\r\n\r\n\r\n   // var indent = '~~~~~~~~~~~~~~~~~~~~';\r\n\r\n   // const listToTree = (arr = []) => {\r\n   //    let map = {}, node, node1, res = [], i, arr1 = [], obj = {}, children = [];\r\n\r\n   //    for (i = 0; i < arr.length; i += 1) {\r\n\r\n   //       var exprStr = \"\";\r\n\r\n   //       var indentSpace = indent.substring(0, arr[i].lvl).replace(/~/gi, \"&nbsp;&nbsp;&nbsp;\")\r\n\r\n   //       if (arr[i].exprntyid != 1) {\r\n   //          exprStr += \"<span style='color:blue;' >\" + indentSpace + arr[i].exprnty + \"</span>\";\r\n   //          if (arr[i].exprntyid != 3) {\r\n   //             exprStr += \"(\"\r\n   //          }\r\n   //          exprStr += \"<span style='color:maroon;' >\" + arr[i].exprn + \"</span>\";\r\n\r\n   //          if (arr[i].exprntyid == 21) {\r\n   //             exprStr += '-' + arr[i].stgname\r\n   //          }\r\n\r\n   //          if (arr[i].exprntyid != 3) {\r\n   //             exprStr += \")\"\r\n   //          }\r\n   //       }\r\n   //       else {\r\n   //          exprStr += indentSpace + arr[i].exprn;\r\n   //       }\r\n\r\n\r\n   //       map[arr[i].exprnid] = i;\r\n\r\n\r\n   //       obj = { id: arr[i].exprnid, name: exprStr, fixMenu: true, children: children }\r\n   //       arr1 = [...arr1, obj]\r\n   //       arr1[i].children = [];\r\n   //       if (arr[i].prexprnid == null) {\r\n   //          arr[i].prexprnid = 0;\r\n   //       }\r\n\r\n\r\n   //    };\r\n\r\n\r\n   //    for (i = 0; i < arr.length; i += 1) {\r\n   //       node = arr[i];\r\n   //       node1 = arr1[i];\r\n   //       if (node.prexprnid !== 0) {\r\n   //          console.log(arr1[i]);\r\n   //          arr1[map[node.prexprnid]].fixMenu = false;\r\n   //          arr1[map[node.prexprnid]].children.push(node1);\r\n   //       }\r\n   //       else {\r\n   //          res.push(node1);\r\n   //       };\r\n   //    };\r\n   //    return res;\r\n   // };\r\n\r\n\r\n   // const menutree = listToTree(Response.body.expressions)\r\n\r\n   // console.log(menutree)\r\n\r\n   return Response;\r\n\r\n};\r\n\r\nexport const GetEventTree = async (ScrId) => {\r\n\r\n   let Response;\r\n\r\n   //  /* Header */\r\n   const convID = generateUUID();\r\n   const frmHdr = { convid: convID, tag: \"Event Tree\", orgid: \"\", vendid: \"0\" };\r\n   const frmData = { cmbScrId: ScrId }\r\n   const data = { hdr: frmHdr, body: frmData };\r\n   console.log('frmData', frmData)\r\n   const reqHdr = {  };\r\n\r\n   await api.post(apiendpoints.Evtree, compressBase64(data), reqHdr).then(function (response) {\r\n      Response = JSON.parse(decompressBase64(response.data));\r\n   })\r\n\r\n   var indent = '~~~~~~~~~~~~~~~~~~~~';\r\n\r\n   const listToTree = (arr = []) => {\r\n      let map = {}, node, node1, res = [], i, arr1 = [], obj = {}, children = [];\r\n\r\n      for (i = 0; i < arr.length; i += 1) {\r\n\r\n         var exprStr = \"\";\r\n\r\n         var indentSpace = indent.substring(0, arr[i].lvl).replace(/~/gi, \"&nbsp;&nbsp;&nbsp;\")\r\n\r\n         exprStr += indentSpace + \"<span style='color:blue;'>\";\r\n\r\n\r\n         if (arr[i].flag == 1)\r\n            exprStr += \"Stg-\";\r\n         else if (arr[i].flag == 2)\r\n            exprStr += \"Evn-\";\r\n         else if (arr[i].flag == 3)\r\n            exprStr += \"ExGr-\";\r\n         else\r\n            exprStr += \"\";\r\n\r\n         exprStr += \"</span>\" + arr[i].leaf;\r\n\r\n         map[arr[i].id] = i;\r\n\r\n         obj = { id: arr[i].id, name: exprStr, fixMenu: true, children: children }\r\n         arr1 = [...arr1, obj]\r\n         arr1[i].children = [];\r\n         if (arr[i].prntid == null) {\r\n            arr[i].prntid = 0;\r\n         }\r\n\r\n      };\r\n\r\n\r\n      for (i = 0; i < arr.length; i += 1) {\r\n         node = arr[i];\r\n         node1 = arr1[i];\r\n         if (node.prntid !== 0) {\r\n            console.log(arr1[i]);\r\n            arr1[map[node.prntid]].fixMenu = false;\r\n            arr1[map[node.prntid]].children.push(node1);\r\n         }\r\n         else {\r\n            res.push(node1);\r\n         };\r\n      };\r\n      return res;\r\n   };\r\n\r\n\r\n   const menutree = listToTree(Response.body.expressions)\r\n\r\n   console.log(menutree)\r\n\r\n   return { data: { menutree: menutree, expresponse: Response.body.expressions } };\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport const GetUIDesignTree = async (ScrId, StgId) => {\r\n\r\n   let Response;\r\n\r\n   //  /* Header */\r\n   const convID = generateUUID();\r\n   const frmHdr = { convid: convID, tag: \"Get Stg UI Design\", orgid: \"\", vendid: \"0\" };\r\n   const frmData = { cmbScrId: ScrId, cmbStgId: StgId }\r\n   const data = { hdr: frmHdr, body: frmData };\r\n   console.log('frmData', frmData)\r\n   const reqHdr = { };\r\n\r\n   await api.post(apiendpoints.uidsgn, compressBase64(data), reqHdr).then(function (response) {\r\n      Response = JSON.parse(decompressBase64(response.data));\r\n   })\r\n\r\n   var indent = '~~~~~~~~~~~~~~~~~~~~';\r\n\r\n   const listToTree = (arr = []) => {\r\n      let map = {}, node, node1, res = [], i, arr1 = [], obj = {}, children = [];\r\n\r\n      for (i = 0; i < arr.length; i += 1) {\r\n\r\n         var exprStr = \"\";\r\n\r\n         var indentSpace = indent.substring(0, arr[i].lvl).replace(/~/gi, \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n\r\n         exprStr += indentSpace + arr[i].uiexprn;\r\n\r\n         map[arr[i].uidsgnid] = i;\r\n\r\n         obj = { id: arr[i].uidsgnid, name: exprStr, fixMenu: true, children: children }\r\n         arr1 = [...arr1, obj]\r\n         arr1[i].children = [];\r\n         if (arr[i].prntid == null) {\r\n            arr[i].prntid = 0;\r\n         }\r\n\r\n      };\r\n\r\n\r\n      for (i = 0; i < arr.length; i += 1) {\r\n         node = arr[i];\r\n         node1 = arr1[i];\r\n         if (node.prntid !== 0) {\r\n            console.log(arr1[i]);\r\n            arr1[map[node.prntid]].fixMenu = false;\r\n            arr1[map[node.prntid]].children.push(node1);\r\n         }\r\n         else {\r\n            res.push(node1);\r\n         };\r\n      };\r\n      return res;\r\n   };\r\n\r\n   const uitree  = listToTree(Response.body.uidsgn)\r\n   return { data: { uitree: uitree, actualUiTree : Response.body.uidsgn } };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const data = [\r\n//   {\r\n//     id: 1,\r\n//     name: 'Node 1',\r\n//     children: [\r\n//       {\r\n//         id: 2,\r\n//         name: 'Node 1.1',\r\n//         children: [\r\n//           {\r\n//             id: 3,\r\n//             name: 'Node 1.1.1',\r\n//             children: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         name: 'Node 1.2',\r\n//         children: []\r\n//       }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     name: 'Node 2',\r\n//     children: [\r\n//       {\r\n//         id: 6,\r\n//         name: 'Node 2.1',\r\n//         children: []\r\n//       },\r\n//       {\r\n//         id: 7,\r\n//         name: 'Node 2.2',\r\n//         children: []\r\n//       }\r\n//     ]\r\n//   }\r\n// ];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["apiendpoints","appsettings","GetExpressiontree","async","ScrId","GroupId","Response","ExpressionTree","GetExpTree","data","hdr","convid","generateUUID","tag","orgid","vendid","body","cmbScrId","txtExprGroupId","combonurl","api","post","compressBase64","then","response","strResponse","JSON","parse","decompressBase64","GetEventTree","frmData","console","log","Evtree","menutree","node","node1","i","arr","arguments","length","undefined","map","res","arr1","obj","children","exprStr","substring","lvl","replace","flag","leaf","id","name","fixMenu","prntid","push","listToTree","expressions","expresponse","GetUIDesignTree","StgId","cmbStgId","uidsgn","uitree","uiexprn","uidsgnid","actualUiTree","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}